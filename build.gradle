// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        compose_version = '1.0.0-SNAPSHOT'
        compose_navigation_version = '0.1.0-SNAPSHOT'
    }
    ext.kotlin_version = "1.4.0"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.2.0-alpha12"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

subprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://androidx.dev/snapshots/builds/6859579/artifacts/ui/repository' }
    }

    // Create a configuration which allows us to intercept the JARs, and add them to
    // Kotlin Compiler freeCompilerArgs. This is needed because we can't currently use the
    // built-in `compose` feature in AGP, since it depends on the old Compose Compiler artifacts.
    // TODO: Remove this once AGP releases 4.2.0-alpha13 and uses the new Compose Compiler artifact name
    def compilerPluginConfig = project.configurations.create("kotlinCompilerPlugin")

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach { compile ->
        kotlinOptions {
            // Treat all Kotlin warnings as errors
            allWarningsAsErrors = true

            // Set JVM target to 1.8
            jvmTarget = "1.8"

            // Allow use of @OptIn
            freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
            freeCompilerArgs += "-Xallow-jvm-ir-dependencies"
        }

        compile.dependsOn(compilerPluginConfig)
        compile.doFirst {
            if (!compilerPluginConfig.isEmpty()) {
                // Add the compiler plugin JARs using the -Xplugin flag
                compile.kotlinOptions.freeCompilerArgs +=
                        "-Xplugin=${compilerPluginConfig.files.first()}"
                // Need to turn on the IR compiler too
                compile.kotlinOptions.useIR = true
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
